Shop2工程的更新日志
2.0版本：截止2017年5月30日完成
	该版本完成了数据库操作模块、HTTP请求映射模块、持久化依赖注入容器模块
	1）数据库操作由泛型反射注解完成，model包内存放的是和数据表对应的各个数据模型类，
		Util包中的DbUtil类完成了C3P0数据库连接的获取，在此基础上，DataBase类完成了数据库占位符操作的简单封装
		console.dao包是数据库操作的核心包，模块向外开放Dao接口，实现的类主要是DaoImpl，
		其内部用泛型替代model类，利用反射去调用model类内部的set、get方法，且自定义model类注解和字段注解，
		通过反射其注解抽象操作，实现基本的增删改查等功能。
		console.biz包是对dao包的高层调用，是数据库操作模块开放给业务逻辑层的接口，其实现了各个数据表所对应的各种操作
		简化了业务逻辑中对数据库的访问的代码量
	2） HTTP请求映射层主要是规定了项目的URL的含义http:ip:port/项目名/{{servlet}}/{{controller}}/{{action}}
		同样是通过反射和注解来映射到对应的controller的action中，这里就不详细介绍了
	3）持久化的依赖注入容器是通过容器类的单例模式实现的，容器内部存放了两个Map，分别是从Xml中读取的配置信息的存储
		和实际的配置对象的存储，由于容器类本身实现单例模式，可以保证两个Map的唯一性，而项目开始之初就解析Xml配置来初始化
		配置信息的Map，在实际调用配置的对象的过程中，首次调用会在配置信息Map中读取配置信息反射初始化对象，然后存到对象Map中
		这样既保证了对象的唯一性提高内存使用效率和初始化的效率，而且不需要再初始化过程中再去初始化过多的对象，而是以注入形式
		直接把值或者容器内存放的其他对象注入到当前对象中。
	以上三者分别是效仿Hibernate、SpringMVC、Spring的。
	但是目前为止还有一些细节上面的问题，这个项目会一直维护下去，之后的修改更新日志会记录在note.txt中。